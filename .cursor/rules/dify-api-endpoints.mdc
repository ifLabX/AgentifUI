---
alwaysApply: false
---

# Dify API Integration Standards

## Core Architecture

3-layer architecture handles Dify API integration:

1. **Proxy Layer**: `app/api/dify/[appId]/[...slug]/route.ts` - Authentication and request forwarding
2. **Service Layer**: `lib/services/dify/` - Business logic and API calls
3. **Type Layer**: `lib/services/dify/types.ts` - TypeScript type definitions

## Main Service Modules

| Service | File | Function |
|---------|------|----------|
| Chat | `chat-service.ts` | Chat message streaming processing |
| Workflow | `workflow-service.ts` | Workflow execution and management |
| App | `app-service.ts` | Application parameters and info retrieval |
| Message | `message-service.ts` | Message management and feedback |
| Conversation | `conversation-service.ts` | Conversation list and management |
| Completion | `completion-service.ts` | Text generation and streaming output |

## Usage Patterns

### Import Services
```typescript
// Unified entry import
import { streamDifyChat, getDifyAppParameters } from '@lib/services/dify';

// Or import from specific service file
import { streamDifyChat } from '@lib/services/dify/chat-service';
```

### Error Handling
```typescript
try {
  const result = await someService(appId, params);
} catch (error) {
  if (error.status === 401) {
    // Handle authentication error
  } else if (error.status === 429) {
    // Handle rate limiting error
  }
}
```

### Type Safety
All API-related types defined in `lib/services/dify/types.ts`:
- Request types: `Dify*RequestPayload`
- Response types: `Dify*Response`
- SSE event types: `Dify*SseEvent`

## Development Standards

1. **New Endpoints**: MUST follow patterns of existing service files
2. **Type Definitions**: MUST define all related types in types.ts
3. **Error Handling**: MUST use unified error handling mechanism
4. **Documentation**: MUST update JSDoc comments for related service functions

## Coverage Statistics

- **Total Endpoints**: 25
- **Service Files**: 7
- **Supported App Types**: 5 (chatbot, agent, chatflow, workflow, text-generation)
- **Coverage**: 100% Dify API functionality