name: Claude AI Agent

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned, labeled]
  pull_request_review:
    types: [submitted]
  pull_request:
    types: [opened, synchronize]

jobs:
  claude-agent:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      actions: read
      checks: read
      statuses: read
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Claude AI Agent
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          mode: "tag"
          trigger_phrase: "@claude"
          custom_instructions: |
            You are an intelligent AI agent for this Next.js 15 + TypeScript + Supabase project.
            
            **Decision Guidelines:**
            
            1. **For Pull Requests**: 
               - If mentioned in comments: Provide code review, answer questions, or implement requested changes
               - If opening PR: Perform automatic code review focusing on our tech stack
               - Always consider making commits if changes are needed
            
            2. **For Issues**:
               - Analyze the problem and provide solutions
               - Create implementation plans when appropriate
               - Make code changes if the issue is clear and actionable
            
            3. **Code Changes**:
               - Follow our existing patterns (Next.js App Router, TypeScript, Tailwind CSS 4)
               - Always run type checking with `pnpm type-check`
               - Maintain i18n compatibility - never hardcode strings
               - Follow comment standards (English, explain "why" not "what")
            
            4. **Communication Style**:
               - Be concise and actionable
               - Always explain your reasoning for the chosen action
               - Provide context about what you're doing and why
            
            **Tech Stack Context:**
            - Next.js 15 with App Router
            - TypeScript with strict mode
            - Supabase for auth/database
            - Tailwind CSS 4 for styling
            - Zustand for state management
            - next-intl for internationalization
            
            **Usage:**
            - **@claude in comments**: Respond to specific questions or perform requested code reviews
            - **@claude in PR reviews**: Provide detailed code analysis and suggestions
            - **@claude in issues**: Analyze problems and provide implementation guidance
            
            **Quality Focus Areas:**
            - TypeScript type safety and Next.js 15 App Router patterns
            - Supabase security best practices and RLS policies
            - i18n compliance (no hardcoded strings, proper key usage)
            - Tailwind CSS 4 compatibility and responsive design
            - Code comment quality (English, explain 'why' not 'what')
            
            **Response Options:**
            - Provide detailed code review and feedback
            - Make code improvements via commits when appropriate
            - Ask clarifying questions for ambiguous requests
            - Update documentation when changes affect usage
          
          allowed_tools: |
            "Bash(ls:*)",
            "Bash(find:*)",
            "Bash(pwd:*)",
            "Bash(cd:*)",
            "Bash(git:*)",
            "Bash(pnpm:*)",
            "Bash(pnpm type-check:*)",
            "Bash(pnpm build:*)",
            "Bash(pnpm format:*)",
            "Bash(pnpm format:check:*)",
            "Bash(pnpm i18n:check:*)",
            "Bash(pnpm i18n:validate:*)",
            "Bash(pnpm i18n:detect:*)",
            "Bash(pnpm run type-check:*)",
            "Bash(pnpm run i18n:check:*)",
            "Bash(pnpm run build:*)",
            "Bash(npm:*)",
            "Bash(cat:*)",
            "Bash(echo:*)",
            "Bash(grep:*)",
            "Bash(rg:*)",
            "Bash(date:*)",
            "Bash(wc:*)",
            "Bash(head:*)",
            "Bash(tail:*)",
            "Bash(awk:*)",
            "Bash(sed:*)",
            "Bash(sort:*)",
            "Bash(uniq:*)",
            "Bash(supabase:*)"
          max_turns: 3
          github_token: ${{ secrets.GITHUB_TOKEN }}